@using FinanceTool.Data.Services
@using FinanceTool.Components.Helpers
@inject UserDataService UserData

<div class="card shadow-sm rounded-5 d-flex flex-column justify-content-between" style="max-width: 350px; max-height: 150px; height: 150px;">
    <div class="pt-2 ps-3 pe-3">
        <div class="fw-semibold text-muted small mb-1">
           Total Balance
        </div>
        <div class="fw-bolder fs-5">
            @FormatHelper.FormatCurrency(Balance)
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-end px-3 pb-2 fs-6">
        <div>
            <div class="text-secondary fw-light small">Income</div>
            <div class="d-flex align-items-center justify-content-end fw-semibold fs-6">
                $5,129.91
                <span class="d-flex align-items-center ms-2 px-2 py-1 rounded-3 bg-success bg-opacity-10 text-success fw-light small">
                    <i class="bi bi-arrow-up-right me-1"></i> 4.2%
                </span>
            </div>
        </div>

        <div>
            <div class="text-secondary fw-light small ">Expense</div>
            <div class="d-flex align-items-center justify-content-end fw-semibold fs-6">
                $5,129.91
                <span class="d-flex align-items-center ms-2 px-2 py-1 rounded-3 bg-danger bg-opacity-10 text-danger fw-light small">
                    <i class="bi bi-arrow-up-right me-1"></i> 4.2%
                </span>
            </div>        
        </div>
    </div>

</div>


@code {
    private decimal? Balance;

    protected override async Task OnInitializedAsync() {

        var balance = await UserData.GetBalance();
        if (balance == null) return;

        Balance = balance;
    }  
}
